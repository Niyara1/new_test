                        // 1) Создать объект myBrowser со свойствами name (значение “Chrome”)
                        //  и version (значение «9.2») - двумя способами


// const myBrowser = {
//     name: "Chrome",
//     version: "9.2",
// };

// console.log(myBrowser);

                      // 2.способ
                        
// const myBrowser = {}
// myBrowser.name = "Chrome",
// myBrowser.version = "9.2";

// console.log(myBrowser);


                        // 2) Создать объект cinema со свойствами soldTickets (хранит в себе число, которое 
                        // отображает кол-во проданных билетов) и ticketCost (цена билета) и задайте значения. 
                        // Напишите функцию которая высчитывает сколько денег заработал кинотеатр за один сеанс.


// const cinema = {
//     soldTickets: 100,
//     ticketCost: 315,
// }
// function money(a,b) {
// return a*b 
// }
// console.log(money(cinema.soldTickets,cinema.ticketCost))


                        // 3) Напишите функцию, которая принимает в качестве аргумента объект и возвращает вложенный
                        //  массив вида [[key, value], [key, value]]. То есть, если я вызову функцию objectToArr
                        //  ({ a: 1, b: 2 }), то результатом выполнения должен быть массив - [['a', 1], ['b', 2]].
                        //   Для решения этой задачи вам нужны будут следующие методы: Object.keys() или Object.entries()


//  const obj = {a: 1, b: 2}
//  const result = Object.keys(obj).map((key) => [Number(key), obj[key]]);
                        
//  console.log(result);


                        // 4) Дан объект. Нужно извлечь число 123 одной строкой


// const myCrazyObject = {
//     someArray: [7, 9, {purpose: "путанница", number: 123}, 3.3],
// }
// console.log(myCrazyObject.someArray[2].number)


                        // 5) Напишите функцию, которая проверяет, является ли элемент именно простым объектом,
                        //  а не массивом, null и т.п. Тут вам пригодится метод Array.isArray()


// const arr = [1, 2, 3, 4] 
//    function a(n) {
//    return Array.isArray(n)
//    }
//    console.log(a(arr))


                        // 6) Дан массив из имен например ['john', 'jane', 'kate', 'peter'].
                        //  Вывести новый массив в котором каждая первая буква элемента будет с большой буквы.


// const names = ['john', 'jane', 'kate', 'peter'];
// const newNames = names.map(n => n[0].toUpperCase() + n.slice(1).toLowerCase())
// console.log(newNames)


                        // 7) Сумма диапазона. Напишите функцию range, принимающую два аргумента, 
                        // начало и конец диапазона, и возвращающую массив, который содержит все числа из него, 
                        // включая начальное и конечное. Затем напишите функцию sum, принимающую массив чисел и 
                        // возвращающую их сумму. Запустите указанную выше инструкцию и убедитесь, что она возвращает 
                        // сумму значений массива.


                        // 8) Найдите квадратный корень из 587. Округлите результат в большую и меньшую стороны,
                        //  запишите результаты округления в объект с ключами 'floor' и 'ceil'. Можете все оформить 
                        //  в функцию, которая на входе будет принимать число и на выходе отдавать объект


                        // 9) Дан объект obj с ключами 'Минск', 'Москва', 'Киев' с элементами 'Беларусь', 'Россия',
                        //  'Украина'. С помощью цикла for-in выведите на экран строки такого формата:
                        //  'Минск - это Беларусь.'. Для работы понадобится for...in


//  const obj = {
//      'Минск': 'Беларусь',
//      'Москва': 'Россия',
//      'Киев': 'Украина'
//  };
                        
//  for (const key in obj) {
//      console.log(`${key} - это ${obj[key]}`);
//  }
                        